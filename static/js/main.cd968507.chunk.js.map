{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["style","delimiter","borderTop","height","marginTop","htmlViewer","border","borderRadius","padding","display","gridTemplateRows","gap","content","togglerContainer","flexDirection","flex","copyLabel","outline","margin","cursor","copyLabelHover","color","copyLabelActive","backgroundColor","toggler","gridTemplateColumns","textAlign","label","labelHover","labelActive","background","togglerInput","togglerVertical","flexFlow","HtmlCodeViewer","jsxToString","props","wrapLines","showLineNumbers","wrapLongLines","language","agate","htmlLabelStyle","rawLabelStyle","copyLabelStyle","displayRaw","this","raw","displayHtml","rendered","handleChecked","e","copyToClipBoard","navigator","setTimeout","setLabelStyle","state","labelName","render","className","id","onClick","onMouseEnter","onMouseLeave","React","Component","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cd968507.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\nimport React from 'react'\nimport jsxToString from 'jsx-to-string'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { agate } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\n\nconst style = {\n  delimiter: {\n    borderTop: \"0.1px solid #bababa\",\n    height: \"0.1rem\",\n    marginTop: \"0.1rem\",\n  },\n  htmlViewer: {\n    border: \"0.1px solid #bababa\",\n    borderRadius: \"0.5rem\",\n    padding: \"1rem\",\n    display: \"grid\",\n    gridTemplateRows: \"auto\",\n    gap: \"1rem\",\n  },\n  content: {\n    borderRadius: \"0.5rem\",\n    padding: \"0.5rem\",\n  },\n  togglerContainer: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    flex: 1,\n  },\n  copyLabel: {\n    border: \"none\",\n    outline: \"none\",\n    margin: \"0.2rem\",\n    padding: \"0.2rem 0.5rem\",\n    cursor: \"pointer\",\n    borderRadius: \"0.25rem\",\n  },\n  copyLabelHover: {\n    border: \"none\",\n    outline: \"none\",\n    margin: \"0.2rem\",\n    padding: \"0.2rem 0.5rem\",\n    cursor: \"pointer\",\n    borderRadius: \"0.25rem\",\n    color: \"#007bff\",\n  },\n  copyLabelActive: {\n    border: \"none\",\n    outline: \"none\",\n    margin: \"0.2rem\",\n    padding: \"0.2rem 0.5rem\",\n    cursor: \"pointer\",\n    borderRadius: \"0.25rem\",\n    backgroundColor: \"#007bff\",\n    color: '#fff'\n  },\n  toggler: {\n    borderRadius: \" 0.25rem\",\n    display: \"grid\",\n    gridTemplateColumns: \"minmax(5rem, auto) minmax(5rem, auto) minmax(3rem, auto)\",\n    border: \"0.1px solid #bababa\",\n    textAlign: \"center\",\n  },\n  label: {\n    borderRadius: \"0.25rem\",\n    cursor: \"pointer\",\n    display: \"inline-block\",\n    margin: \"0.2rem\",\n    padding: \"0.2rem 0.5rem\",\n    textAlign: \"center\",\n  },\n  labelHover: {\n    borderRadius: \"0.25rem\",\n    cursor: \"pointer\",\n    display: \"inline-block\",\n    margin: \"0.2rem\",\n    padding: \"0.2rem 0.5rem\",\n    textAlign: \"center\",\n    color: \"#000\",\n    backgroundColor: \"#efefef\",\n  },\n  labelActive: {\n    borderRadius: \"0.25rem\",\n    cursor: \"pointer\",\n    display: \"inline-block\",\n    margin: \"0.2rem\",\n    padding: \"0.2rem 0.5rem\",\n    textAlign: \"center\",\n    background: \"#007bff\",\n    color: \"white\",\n  },\n  togglerInput: {\n    display: \"none\",\n  },\n  togglerVertical: {\n    flexFlow: \"column wrap\",\n  }\n}\n\nclass HtmlCodeViewer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.str = jsxToString(props.children)\n\n    if (props.language === 'html') {\n      this.str = this.str.replace(/className/g, 'class')\n    }\n\n    this.rendered = props.children\n\n    this.raw = <SyntaxHighlighter\n      wrapLines\n      showLineNumbers\n      wrapLongLines\n      language='htmlbars'\n      style={agate}\n    >\n      {this.str}\n    </SyntaxHighlighter>\n\n    this.state = {\n      content: props.children,\n      htmlLabelStyle: style.label,\n      rawLabelStyle: style.label,\n      copyLabelStyle: style.copyLabel,\n    }\n\n    this.displayHtml = this.displayHtml.bind(this)\n    this.displayRaw = this.displayRaw.bind(this)\n    this.handleChecked = this.handleChecked.bind(this)\n    this.copyToClipBoard = this.copyToClipBoard.bind(this)\n  }\n\n  displayRaw() {\n    this.setState({ content: this.raw })\n  }\n\n  displayHtml() {\n    this.setState({ content: this.rendered })\n  }\n\n  handleChecked(e) {\n    this.display(e.currentTarget.value)\n  }\n\n  copyToClipBoard(e) {\n    e.persist()\n    navigator.clipboard.writeText(this.str).then(() => {\n      this.setLabelStyle('copyLabelStyle', 'copyLabelActive')\n      setTimeout(() => {\n        this.setLabelStyle('copyLabelStyle', 'copyLabel')\n      }, 150)\n    })\n  }\n\n  setLabelStyle(labelName, styleName, force) {\n    if (force) {\n      this.state[labelName] = style[styleName];\n      this.setState(this.state);\n    }\n    else {\n      if (this.state[labelName] !== style.labelActive) {\n        this.state[labelName] = style[styleName];\n        this.setState(this.state);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div style={style.htmlViewer} className='.htmlViewer'>\n        <div style={style.togglerContainer} className='.togglerContainer'>\n          <div style={style.toggler} className='.toggler'>\n\n            <div id=\"htmlLabel\" style={this.state.htmlLabelStyle}\n              onClick={\n                () => {\n                  this.setLabelStyle('htmlLabelStyle', 'labelActive')\n                  this.setLabelStyle('rawLabelStyle', 'label', true);\n                  this.displayHtml();\n                }\n              }\n              onMouseEnter={\n                () => this.setLabelStyle('htmlLabelStyle', 'labelHover')\n              }\n              onMouseLeave={\n                () => this.setLabelStyle('htmlLabelStyle', 'label')\n              }\n            >html</div>\n\n            <div id=\"rawLabel\" style={this.state.rawLabelStyle}\n              onClick={\n                () => {\n                  this.setLabelStyle('rawLabelStyle', 'labelActive')\n                  this.setLabelStyle('htmlLabelStyle', 'label', true)\n\n                  this.displayRaw();\n                }\n              }\n              onMouseEnter={\n                () => this.setLabelStyle('rawLabelStyle', 'labelHover')\n              }\n              onMouseLeave={\n                () => {\n                  this.setLabelStyle('rawLabelStyle', 'label')\n                }\n              }\n            >code</div>\n            <div style={this.state.copyLabelStyle}\n\n              onClick={this.copyToClipBoard}\n\n              onMouseEnter={\n                () => this.setLabelStyle('copyLabelStyle', 'copyLabelHover')\n              }\n              onMouseLeave={\n                () => this.setLabelStyle('copyLabelStyle', 'copyLabel')\n              }>copy</div>\n          </div>\n        </div>\n        <div className='.delimiter' style={style.delimiter} />\n\n        <div className='.content' style={style.content}>{this.state.content}</div>\n      </div >\n    )\n  }\n}\n\nexport default HtmlCodeViewer","import React from 'react'\n\nimport HtmlCodeViewer from 'rhcv'\nimport 'rhcv/dist/index.css'\n\nconst App = () => {\n  return <HtmlCodeViewer>\n    <div>This is an example of how react-html-code-viewer works.</div>\n  </HtmlCodeViewer>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["constructor","v4","style","props","className","title","reactElementToJSXString","id","wrapLines","showLineNumbers","wrapLongLines","language","content","htmlLabelStyle","rawLabelStyle","copyLabelStyle","copyLabel","this","raw","rendered","e","target","navigator","setTimeout","type","name","onChange","defaultChecked","htmlIsActive","active","htmlFor","onClick","displayHtml","rawIsActive","displayRaw","copyToClipBoard","state","React","options","i","lastActive","styles","push","key","value","getCodeViewer","highlighter","App","useState","viewer","setViewer","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84d12af6.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\nimport React from 'react'\nimport reactElementToJSXString from 'react-element-to-jsx-string'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { agate } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\n\nimport { v4 } from 'uuid'\n\nimport style from './styles.module.css'\n\nclass HtmlCodeViewer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.highlighterId = v4()\n    this.onChange = (this.props.onChange) ? this.props.onChange : () => { }\n    this.htmlIsActive = (this.props.active === \"html\") ? style.active : null\n    this.rawIsActive = (this.props.active === \"raw\") ? style.active : null\n    this.style = (this.props.highlighter) ? this.props.highlighter : agate\n\n    if (this.htmlIsActive === null && this.rawIsActive === null) {\n      this.htmlIsActive = style.active\n    }\n\n    this.id = (props.id) ? props.id : v4()\n\n    if (props.title) {\n      this.title = <div className={style.title}>{this.props.title}</div>\n    }\n\n    this.str = reactElementToJSXString(props.children).replace(/{' '}/g, \"\")\n\n    if (props.language === 'html') {\n      this.str = this.str.replace(/className/g, 'class')\n    }\n\n    this.rendered = props.children\n\n    this.raw = <SyntaxHighlighter\n      id={this.highlighterId}\n      wrapLines\n      showLineNumbers\n      wrapLongLines\n      language='htmlbars'\n      style={this.style}\n    >\n      {this.str}\n    </SyntaxHighlighter>\n\n    this.state = {\n      content: (props.active === \"raw\") ? this.raw : this.rendered,\n      htmlLabelStyle: style.labelActive,\n      rawLabelStyle: style.label,\n      copyLabelStyle: style.copyLabel,\n    }\n\n    this.active = props.active\n    this.displayHtml = this.displayHtml.bind(this)\n    this.displayRaw = this.displayRaw.bind(this)\n    this.handleChecked = this.handleChecked.bind(this)\n    this.copyToClipBoard = this.copyToClipBoard.bind(this)\n  }\n\n  displayRaw() {\n    this.setState({ content: this.raw })\n    this.active = \"raw\"\n  }\n\n  displayHtml() {\n    this.setState({ content: this.rendered })\n    this.active = \"html\"\n  }\n\n  handleChecked(e) {\n    this.display(e.currentTarget.value)\n  }\n\n  copyToClipBoard(e) {\n    e.persist()\n    const target = e.currentTarget\n\n    target.innerText = \"copied\"\n\n    navigator.clipboard.writeText(this.str).then(() => {\n      setTimeout(() => {\n        target.innerText = \"copy\"\n      }, 500)\n    })\n  }\n\n\n\n  render() {\n    return (\n      <div className={[style.htmlViewer, style.overflowHidden].join(' ')} id={this.id}>\n        <div className={style.togglerContainer} id={this.id + \"-togglerContainer\"}>\n          {this.title}\n\n          <div className={style.toggler} id={this.id + \"-toggler\"}>\n            <input type=\"radio\" name={\"contentRadio-\" + this.id} id={\"htmlRadio-\" + this.id} onChange={() => this.onChange('html')} defaultChecked={this.htmlIsActive === style.active} />\n\n            <label htmlFor={\"htmlRadio-\" + this.id} className={style.label + \" \" + this.htmlIsActive}\n              onClick={this.displayHtml}\n            >\n              html</label>\n            <input type=\"radio\" name={\"contentRadio-\" + this.id} id={\"rawRadio-\" + this.id} onChange={() => this.onChange('raw')} defaultChecked={this.rawIsActive === style.active} />\n\n            <label htmlFor={\"rawRadio-\" + this.id} className={style.label + \" \" + this.rawIsActive}\n              onClick={this.displayRaw}\n            >\n              code</label>\n\n            <div className={[style.label, style.copyLabel].join(' ')}\n              onClick={this.copyToClipBoard}\n            >copy</div>\n          </div>\n        </div>\n\n        <div className={style.content} id={this.id + \"-content\"}>{this.state.content}</div>\n      </div>\n    )\n  }\n}\n\nexport default HtmlCodeViewer","import React, { useState } from 'react'\n\nimport HtmlCodeViewer from 'rhcv'\n\nimport * as styles from 'react-syntax-highlighter/dist/cjs/styles/hljs'\n\nlet options = []\nlet i = 0\nlet lastActive = \"html\"\nfor (let style in styles) {\n  options.push(<option key={i} value={style}>{style}</option>)\n  i++\n}\n\nfunction getCodeViewer(highlighter) {\n  return <HtmlCodeViewer id=\"htmlViewer\" key={highlighter} highlighter={styles[highlighter]} active={lastActive} title=\"I am a title\" onChange={(active) => { lastActive = active; }}>\n    <div>\n      This is an example text <br />\n      click on <strong>html</strong> to display rendered html<br />\n      click on <strong>code</strong> to display raw code<br />\n      click on <strong>copy</strong> to save code in the clipboard<br />\n    </div>\n  </HtmlCodeViewer>\n}\n\nconst App = () => {\n\n  const [viewer, setViewer] = useState(getCodeViewer('darcula'))\n\n  return (\n\n    <div className=\"example\">\n      <div className=\"container\">\n        <select className=\"select\" onChange={(e) => { setViewer(getCodeViewer(e.currentTarget.value)) }}>\n          <option>-- pick a highlighter style --</option>\n          {options}\n        </select>\n      </div>\n      <div>\n        {viewer}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport 'rhcv/dist/index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
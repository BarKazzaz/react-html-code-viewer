{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["HtmlCodeViewer","style","props","v4","className","title","jsxToString","wrapLines","showLineNumbers","wrapLongLines","language","agate","content","htmlLabelStyle","rawLabelStyle","copyLabelStyle","copyLabel","displayRaw","this","raw","displayHtml","rendered","handleChecked","e","copyToClipBoard","target","navigator","setTimeout","render","htmlViewer","togglerContainer","toggler","type","name","id","onChange","defaultChecked","htmlIsActive","active","htmlFor","onClick","rawIsActive","delimiter","state","React","Component","App","console","log","ReactDOM","document","getElementById"],"mappings":"ggBASMA,Y,QACJ,cAAmB,aACjB,wBAEA,SAAiB,QAAD,SAAwB,QAAxB,SAA8C,aAC9D,eAAoB,SAAC,eAAgCC,EAAjC,OAApB,KACA,cAAmB,QAAC,eAA+BA,EAAhC,OAAnB,KAEI,uBAAJ,OAAkC,gBAChC,eAAoBA,EAApB,QAGF,KAAWC,EAAD,GAAaA,EAAb,GAAwBC,cAE9BD,EAAJ,QACE,QAAa,yBAAKE,UAAWH,EAAMI,OAAQ,QAA3C,QAGF,MAAWC,IAAYJ,EAAvB,UAEA,SAAIA,aACF,MAAW,2BAAX,UAGF,WAAgBA,EAAhB,SAEA,MAAW,uBACTK,WADS,EAETC,iBAFS,EAGTC,eAHS,EAITC,SAJS,WAKTT,MAAOU,SAEN,EAPH,KAUA,QAAa,CACXC,QAAS,QAACV,SAA0B,EAA3B,IAAsC,EADpC,SAEXW,eAAgBZ,EAFL,YAGXa,cAAeb,EAHJ,MAIXc,eAAgBd,EAAMe,WAGxB,cAAmB,qBAAnB,IACA,aAAkB,oBAAlB,IACA,gBAAqB,uBAArB,IACA,kBAAuB,yBAAvB,IA7CiB,E,kHAgDnBC,sBACEC,KAAA,SAAc,CAAEN,QAASM,KAAKC,O,EAGhCC,uBACEF,KAAA,SAAc,CAAEN,QAASM,KAAKG,Y,EAGhCC,0BACEJ,KAAA,QAAaK,gBAAb,Q,EAGFC,4BACED,YACA,IAAME,EAASF,EAAf,cAEAE,qBAEAC,8BAA8BR,KAA9BQ,WAA6C,WAC3CC,YAAW,WACTF,qBADFE,S,EAMJC,kBAAS,WACP,OACE,yBAAKxB,UAAWH,EAAM4B,YACpB,yBAAKzB,UAAWH,EAAM6B,kBACnBZ,KADH,MAGE,yBAAKd,UAAWH,EAAM8B,SACpB,2BAAOC,KAAP,QAAoBC,KAAM,gBAAkBf,KAA5C,GAAqDgB,GAAI,aAAehB,KAAxE,GAAiFiB,SAAU,kBAAM,WAAN,SAA6BC,eAAgBlB,KAAKmB,eAAiBpC,EAAMqC,SAEpK,2BAAOC,QAAS,aAAerB,KAA/B,GAAwCd,UAAWH,YAAoBiB,KAAvE,aACEsB,QAAStB,KAAKE,aAJlB,QAOE,2BAAOY,KAAP,QAAoBC,KAAM,gBAAkBf,KAA5C,GAAqDgB,GAAI,YAAchB,KAAvE,GAAgFiB,SAAU,kBAAM,WAAN,QAA4BC,eAAgBlB,KAAKuB,cAAgBxC,EAAMqC,SAEjK,2BAAOC,QAAS,YAAcrB,KAA9B,GAAuCd,UAAWH,YAAoBiB,KAAtE,YACEsB,QAAStB,KAAKD,YAVlB,QAcE,yBAAKb,UAAWH,EAAhB,MACEuC,QAAStB,KAAKM,iBAnBtB,UAuBE,yBAAKpB,UAAWH,EAAMyC,YAEtB,yBAAKtC,UAAWH,EAAMW,SAAUM,KAAKyB,MA1BzC,W,EA3EE3C,CAAuB4C,IAAMC,WCOpBC,G,MAVH,WACV,OACE,6BACE,kBAAC,EAAD,CAAgBzC,MAAM,gBAAgB6B,GAAG,YAAYI,OAAO,MAAMH,SAAU,SAACG,GAAaS,QAAQC,IAAIV,KACpG,4FCFRW,IAASrB,OAAO,kBAAC,EAAD,MAASsB,SAASC,eAAe,U","file":"static/js/main.6c9505fd.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\nimport React from 'react'\nimport jsxToString from 'jsx-to-string'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { agate } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\nimport { v4 } from 'uuid'\n\nimport style from './styles.module.css'\n\nclass HtmlCodeViewer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.onChange = (this.props.onChange) ? this.props.onChange : () => { }\n    this.htmlIsActive = (this.props.active === \"html\") ? style.active : null\n    this.rawIsActive = (this.props.active === \"raw\") ? style.active : null\n\n    if (this.htmlIsActive === null && this.rawIsActive === null) {\n      this.htmlIsActive = style.active\n    }\n\n    this.id = (props.id) ? props.id : v4()\n\n    if (props.title) {\n      this.title = <div className={style.title}>{this.props.title}</div>\n    }\n\n    this.str = jsxToString(props.children)\n\n    if (props.language === 'html') {\n      this.str = this.str.replace(/className/g, 'class')\n    }\n\n    this.rendered = props.children\n\n    this.raw = <SyntaxHighlighter\n      wrapLines\n      showLineNumbers\n      wrapLongLines\n      language='htmlbars'\n      style={agate}\n    >\n      {this.str}\n    </SyntaxHighlighter>\n\n    this.state = {\n      content: (props.active === \"raw\") ? this.raw : this.rendered,\n      htmlLabelStyle: style.labelActive,\n      rawLabelStyle: style.label,\n      copyLabelStyle: style.copyLabel,\n    }\n\n    this.displayHtml = this.displayHtml.bind(this)\n    this.displayRaw = this.displayRaw.bind(this)\n    this.handleChecked = this.handleChecked.bind(this)\n    this.copyToClipBoard = this.copyToClipBoard.bind(this)\n  }\n\n  displayRaw() {\n    this.setState({ content: this.raw })\n  }\n\n  displayHtml() {\n    this.setState({ content: this.rendered })\n  }\n\n  handleChecked(e) {\n    this.display(e.currentTarget.value)\n  }\n\n  copyToClipBoard(e) {\n    e.persist()\n    const target = e.currentTarget\n\n    target.innerText = \"copied\"\n\n    navigator.clipboard.writeText(this.str).then(() => {\n      setTimeout(() => {\n        target.innerText = \"copy\"\n      }, 500)\n    })\n  }\n\n  render() {\n    return (\n      <div className={style.htmlViewer}>\n        <div className={style.togglerContainer}>\n          {this.title}\n\n          <div className={style.toggler}>\n            <input type=\"radio\" name={\"contentRadio-\" + this.id} id={\"htmlRadio-\" + this.id} onChange={() => this.onChange('html')} defaultChecked={this.htmlIsActive === style.active} />\n\n            <label htmlFor={\"htmlRadio-\" + this.id} className={style.label + \" \" + this.htmlIsActive}\n              onClick={this.displayHtml}\n            >\n              html</label>\n            <input type=\"radio\" name={\"contentRadio-\" + this.id} id={\"rawRadio-\" + this.id} onChange={() => this.onChange('raw')} defaultChecked={this.rawIsActive === style.active} />\n\n            <label htmlFor={\"rawRadio-\" + this.id} className={style.label + \" \" + this.rawIsActive}\n              onClick={this.displayRaw}\n            >\n              code</label>\n\n            <div className={style.label}\n              onClick={this.copyToClipBoard}\n            >copy</div>\n          </div>\n        </div>\n        <div className={style.delimiter} />\n\n        <div className={style.content}>{this.state.content}</div>\n      </div>\n    )\n  }\n}\n\nexport default HtmlCodeViewer","import React from 'react'\n\nimport HtmlCodeViewer from 'rhcv'\n\nimport 'rhcv/dist/index.css'\n\nconst App = () => {\n  return (\n    <div>\n      <HtmlCodeViewer title=\"Example title\" id=\"unique-id\" active=\"raw\" onChange={(active) => { console.log(active) }}>\n        <div>This is an example of how react-html-code-viewer works.</div>\n      </HtmlCodeViewer>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport 'rhcv/dist/index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}